// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// PoapDao is the data access object for table poap.
type PoapDao struct {
	table   string      // table is the underlying table name of the DAO.
	group   string      // group is the database configuration group name of current DAO.
	columns PoapColumns // columns contains all the column names of Table for convenient usage.
}

// PoapColumns defines and stores column names for table poap.
type PoapColumns struct {
	Id          string // pk
	PoapId      string // Poap id
	Miner       string // Miner
	PoapName    string // Poap name
	PoapSum     string // Poap sum
	ReceiveCond string // Receive condition
	CoverImg    string // Cover picture
	PoapIntro   string // Poap introduction
	CreateAt    string // Created Time
	UpdateAt    string // Updated Time
	CollectList string //
	MintPlat    string // Mint platform
	Status      string // 状态 0.新建 1.正常（已铸造） 2.审核通过 3.审核不通过
	Type        string // 类型  1.poap 2.头像nft 3.did
	Seriesid    string //
}

// poapColumns holds the columns for table poap.
var poapColumns = PoapColumns{
	Id:          "id",
	PoapId:      "poap_id",
	Miner:       "miner",
	PoapName:    "poap_name",
	PoapSum:     "poap_sum",
	ReceiveCond: "receive_cond",
	CoverImg:    "cover_img",
	PoapIntro:   "poap_intro",
	CreateAt:    "create_at",
	UpdateAt:    "update_at",
	CollectList: "collect_list",
	MintPlat:    "mint_plat",
	Status:      "status",
	Type:        "type",
	Seriesid:    "seriesid",
}

// NewPoapDao creates and returns a new DAO object for table data access.
func NewPoapDao() *PoapDao {
	return &PoapDao{
		group:   "default",
		table:   "poap",
		columns: poapColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *PoapDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *PoapDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *PoapDao) Columns() PoapColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *PoapDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *PoapDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *PoapDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
