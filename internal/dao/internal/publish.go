// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// PublishDao is the data access object for table publish.
type PublishDao struct {
	table   string         // table is the underlying table name of the DAO.
	group   string         // group is the database configuration group name of current DAO.
	columns PublishColumns // columns contains all the column names of Table for convenient usage.
}

// PublishColumns defines and stores column names for table publish.
type PublishColumns struct {
	Id           string // 主键ID
	PoapId       string // Poap id
	TokenId      string // Poap tokenId
	Status       string // 状态 disable:未使用 used.已使用
	No           string // 编号
	ChainStatus  string // 上链状态  0.未上链 1.已上链  2.上链中 3.上链失败
	ChainHash    string // 链上hash
	IsError      string // 是否异常
	ErrorMessage string // 错误信息
	LockFlag     string //
	CreatedAt    string //
	UpdatedAt    string //
}

// publishColumns holds the columns for table publish.
var publishColumns = PublishColumns{
	Id:           "id",
	PoapId:       "poap_id",
	TokenId:      "token_id",
	Status:       "status",
	No:           "no",
	ChainStatus:  "chain_status",
	ChainHash:    "chain_hash",
	IsError:      "is_error",
	ErrorMessage: "error_message",
	LockFlag:     "lock_flag",
	CreatedAt:    "created_at",
	UpdatedAt:    "updated_at",
}

// NewPublishDao creates and returns a new DAO object for table data access.
func NewPublishDao() *PublishDao {
	return &PublishDao{
		group:   "default",
		table:   "publish",
		columns: publishColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *PublishDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *PublishDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *PublishDao) Columns() PublishColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *PublishDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *PublishDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *PublishDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
