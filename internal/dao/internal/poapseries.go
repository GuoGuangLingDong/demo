// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// PoapseriesDao is the data access object for table poapseries.
type PoapseriesDao struct {
	table   string            // table is the underlying table name of the DAO.
	group   string            // group is the database configuration group name of current DAO.
	columns PoapseriesColumns // columns contains all the column names of Table for convenient usage.
}

// PoapseriesColumns defines and stores column names for table poapseries.
type PoapseriesColumns struct {
	Id              string // pk
	SeriesId        string // 徽章系列ID
	SeriesName      string // 徽章系列名称
	SeriesType      string // 徽章系列类型
	SeriesIntro     string // 徽章系列简介
	SeriesNum       string // 徽章系列总量
	SeriesNumLeft   string // 徽章系列剩余数量
	CreateAt        string // Created Time
	UpdateAt        string // Updated Time
	SeriesCreaterid string //
}

// poapseriesColumns holds the columns for table poapseries.
var poapseriesColumns = PoapseriesColumns{
	Id:              "id",
	SeriesId:        "series_id",
	SeriesName:      "series_name",
	SeriesType:      "series_type",
	SeriesIntro:     "series_intro",
	SeriesNum:       "series_num",
	SeriesNumLeft:   "series_num_left",
	CreateAt:        "create_at",
	UpdateAt:        "update_at",
	SeriesCreaterid: "series_createrid",
}

// NewPoapseriesDao creates and returns a new DAO object for table data access.
func NewPoapseriesDao() *PoapseriesDao {
	return &PoapseriesDao{
		group:   "default",
		table:   "poapseries",
		columns: poapseriesColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *PoapseriesDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *PoapseriesDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *PoapseriesDao) Columns() PoapseriesColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *PoapseriesDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *PoapseriesDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *PoapseriesDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
